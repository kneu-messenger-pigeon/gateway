name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-22.04
    outputs:
      imageid: ${{ steps.docker_build.outputs.imageid }}
    steps:
      - uses: actions/checkout@v4
      - name: Test container
        run: ./test-docker.sh

  build:
    needs: test
    runs-on: ubuntu-22.04
    outputs:
      imageid: ${{ steps.docker_build.outputs.imageid }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  dispatch-pigeon:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Pigeon App Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.TOKEN_TO_RUN_GITHUB_ACTION }}
          repository: kneu-messenger-pigeon/pigeon-app
          event-type: image-built
          client-payload: '{"image": "${{ github.event.repository.name }}", "digest": "${{ needs.build.outputs.imageid }}"}'
